fn quicksort(array: ^[i64; 10], left: i64, right: i64) {
    var i = left;
    var j = right;
    var p = (^array)[(left + right) / 2];

    while true {
        while (^array)[i] < p {
            i := i + 1;
        }
        while (^array)[j] > p {
            j := j + 1;
        }

        if i <= j {
            var t = (^array)[i];
            (^array)[i] := (^array)[j];
            (^array)[j] := t;

            i := i + 1;
            j := j + 1;
        }

        if i > j {
            break;
        }
    }

    if left < j {
        quicksort(array, left, j);
    }
    if right > i {
        quicksort(array, i, right);
    }
}

fn main(): i64 {
    var array = [5, 8, 1, 3, 9, 0, 4, 2, 7, 6];
    quicksort(@array, 0, 9);
    assert(array[0] == 0);
    assert(array[5] == 5);
    assert(array[9] == 9);
    return 0;
}
